version: "3.7"
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ../certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/www
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx-proxy
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - ../certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - html:/usr/share/nginx/html
      - /var/www

  local:
    container_name: local
    image: erp_backend_local_api
    build: .
    command: python main.py
    env_file:
        - ./.env
    environment:
      - VIRTUAL_HOST=www.erpapiadvance.cf,erpapiadvance.cf
      - LETSENCRYPT_HOST=www.erpapiadvance.cf,erpapiadvance.cf
      - LETSENCRYPT_EMAIL=herbert.arsilva@gmail.com
    expose:
      - "${APP_PORT}"
    volumes:
      - .:/usr/src/app/

  postgres:
    container_name: postgres
    restart: always
    image: postgres:10
    env_file:
        - ./.env
    volumes:
      - flask-app-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "log_statement=all"]

volumes:
  flask-app-db:
    name: flask-app-db
  vhostd:
  html:
